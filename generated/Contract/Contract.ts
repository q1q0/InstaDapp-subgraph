// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LogFlashloan extends ethereum.Event {
  get params(): LogFlashloan__Params {
    return new LogFlashloan__Params(this);
  }
}

export class LogFlashloan__Params {
  _event: LogFlashloan;

  constructor(event: LogFlashloan) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get route(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }
}

export class updateOwnerLog extends ethereum.Event {
  get params(): updateOwnerLog__Params {
    return new updateOwnerLog__Params(this);
  }
}

export class updateOwnerLog__Params {
  _event: updateOwnerLog;

  constructor(event: updateOwnerLog) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class updateWhitelistLog extends ethereum.Event {
  get params(): updateWhitelistLog__Params {
    return new updateWhitelistLog__Params(this);
  }
}

export class updateWhitelistLog__Params {
  _event: updateWhitelistLog;

  constructor(event: updateWhitelistLog) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isWhitelisted_(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  InstaFeeBPS(): BigInt {
    let result = super.call("InstaFeeBPS", "InstaFeeBPS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_InstaFeeBPS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("InstaFeeBPS", "InstaFeeBPS():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateFeeBPS(_route: BigInt, account_: Address): BigInt {
    let result = super.call(
      "calculateFeeBPS",
      "calculateFeeBPS(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_route),
        ethereum.Value.fromAddress(account_)
      ]
    );

    return result[0].toBigInt();
  }

  try_calculateFeeBPS(
    _route: BigInt,
    account_: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateFeeBPS",
      "calculateFeeBPS(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_route),
        ethereum.Value.fromAddress(account_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  executeOperation(
    _assets: Array<Address>,
    _amounts: Array<BigInt>,
    _premiums: Array<BigInt>,
    _initiator: Address,
    _data: Bytes
  ): boolean {
    let result = super.call(
      "executeOperation",
      "executeOperation(address[],uint256[],uint256[],address,bytes):(bool)",
      [
        ethereum.Value.fromAddressArray(_assets),
        ethereum.Value.fromUnsignedBigIntArray(_amounts),
        ethereum.Value.fromUnsignedBigIntArray(_premiums),
        ethereum.Value.fromAddress(_initiator),
        ethereum.Value.fromBytes(_data)
      ]
    );

    return result[0].toBoolean();
  }

  try_executeOperation(
    _assets: Array<Address>,
    _amounts: Array<BigInt>,
    _premiums: Array<BigInt>,
    _initiator: Address,
    _data: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "executeOperation",
      "executeOperation(address[],uint256[],uint256[],address,bytes):(bool)",
      [
        ethereum.Value.fromAddressArray(_assets),
        ethereum.Value.fromUnsignedBigIntArray(_amounts),
        ethereum.Value.fromUnsignedBigIntArray(_premiums),
        ethereum.Value.fromAddress(_initiator),
        ethereum.Value.fromBytes(_data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getRoutes(): Array<i32> {
    let result = super.call("getRoutes", "getRoutes():(uint16[])", []);

    return result[0].toI32Array();
  }

  try_getRoutes(): ethereum.CallResult<Array<i32>> {
    let result = super.tryCall("getRoutes", "getRoutes():(uint16[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32Array());
  }

  isWhitelisted(param0: Address): boolean {
    let result = super.call("isWhitelisted", "isWhitelisted(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isWhitelisted(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isWhitelisted",
      "isWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  onFlashLoan(
    _initiator: Address,
    param1: Address,
    _amount: BigInt,
    _fee: BigInt,
    _data: Bytes
  ): Bytes {
    let result = super.call(
      "onFlashLoan",
      "onFlashLoan(address,address,uint256,uint256,bytes):(bytes32)",
      [
        ethereum.Value.fromAddress(_initiator),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_fee),
        ethereum.Value.fromBytes(_data)
      ]
    );

    return result[0].toBytes();
  }

  try_onFlashLoan(
    _initiator: Address,
    param1: Address,
    _amount: BigInt,
    _fee: BigInt,
    _data: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onFlashLoan",
      "onFlashLoan(address,address,uint256,uint256,bytes):(bytes32)",
      [
        ethereum.Value.fromAddress(_initiator),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_fee),
        ethereum.Value.fromBytes(_data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenToCToken(param0: Address): Address {
    let result = super.call(
      "tokenToCToken",
      "tokenToCToken(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_tokenToCToken(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokenToCToken",
      "tokenToCToken(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AddTokenToCTokenCall extends ethereum.Call {
  get inputs(): AddTokenToCTokenCall__Inputs {
    return new AddTokenToCTokenCall__Inputs(this);
  }

  get outputs(): AddTokenToCTokenCall__Outputs {
    return new AddTokenToCTokenCall__Outputs(this);
  }
}

export class AddTokenToCTokenCall__Inputs {
  _call: AddTokenToCTokenCall;

  constructor(call: AddTokenToCTokenCall) {
    this._call = call;
  }

  get _cTokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class AddTokenToCTokenCall__Outputs {
  _call: AddTokenToCTokenCall;

  constructor(call: AddTokenToCTokenCall) {
    this._call = call;
  }
}

export class ExecuteOperationCall extends ethereum.Call {
  get inputs(): ExecuteOperationCall__Inputs {
    return new ExecuteOperationCall__Inputs(this);
  }

  get outputs(): ExecuteOperationCall__Outputs {
    return new ExecuteOperationCall__Outputs(this);
  }
}

export class ExecuteOperationCall__Inputs {
  _call: ExecuteOperationCall;

  constructor(call: ExecuteOperationCall) {
    this._call = call;
  }

  get _assets(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _premiums(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _initiator(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class ExecuteOperationCall__Outputs {
  _call: ExecuteOperationCall;

  constructor(call: ExecuteOperationCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class FlashLoanCall extends ethereum.Call {
  get inputs(): FlashLoanCall__Inputs {
    return new FlashLoanCall__Inputs(this);
  }

  get outputs(): FlashLoanCall__Outputs {
    return new FlashLoanCall__Outputs(this);
  }
}

export class FlashLoanCall__Inputs {
  _call: FlashLoanCall;

  constructor(call: FlashLoanCall) {
    this._call = call;
  }

  get _tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _route(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class FlashLoanCall__Outputs {
  _call: FlashLoanCall;

  constructor(call: FlashLoanCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get owner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OnFlashLoanCall extends ethereum.Call {
  get inputs(): OnFlashLoanCall__Inputs {
    return new OnFlashLoanCall__Inputs(this);
  }

  get outputs(): OnFlashLoanCall__Outputs {
    return new OnFlashLoanCall__Outputs(this);
  }
}

export class OnFlashLoanCall__Inputs {
  _call: OnFlashLoanCall;

  constructor(call: OnFlashLoanCall) {
    this._call = call;
  }

  get _initiator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _fee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnFlashLoanCall__Outputs {
  _call: OnFlashLoanCall;

  constructor(call: OnFlashLoanCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class ReceiveFlashLoanCall extends ethereum.Call {
  get inputs(): ReceiveFlashLoanCall__Inputs {
    return new ReceiveFlashLoanCall__Inputs(this);
  }

  get outputs(): ReceiveFlashLoanCall__Outputs {
    return new ReceiveFlashLoanCall__Outputs(this);
  }
}

export class ReceiveFlashLoanCall__Inputs {
  _call: ReceiveFlashLoanCall;

  constructor(call: ReceiveFlashLoanCall) {
    this._call = call;
  }

  get value0(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _fees(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class ReceiveFlashLoanCall__Outputs {
  _call: ReceiveFlashLoanCall;

  constructor(call: ReceiveFlashLoanCall) {
    this._call = call;
  }
}

export class TransferFeeToTreasuryCall extends ethereum.Call {
  get inputs(): TransferFeeToTreasuryCall__Inputs {
    return new TransferFeeToTreasuryCall__Inputs(this);
  }

  get outputs(): TransferFeeToTreasuryCall__Outputs {
    return new TransferFeeToTreasuryCall__Outputs(this);
  }
}

export class TransferFeeToTreasuryCall__Inputs {
  _call: TransferFeeToTreasuryCall;

  constructor(call: TransferFeeToTreasuryCall) {
    this._call = call;
  }

  get _tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class TransferFeeToTreasuryCall__Outputs {
  _call: TransferFeeToTreasuryCall;

  constructor(call: TransferFeeToTreasuryCall) {
    this._call = call;
  }
}

export class UpdateOwnerCall extends ethereum.Call {
  get inputs(): UpdateOwnerCall__Inputs {
    return new UpdateOwnerCall__Inputs(this);
  }

  get outputs(): UpdateOwnerCall__Outputs {
    return new UpdateOwnerCall__Outputs(this);
  }
}

export class UpdateOwnerCall__Inputs {
  _call: UpdateOwnerCall;

  constructor(call: UpdateOwnerCall) {
    this._call = call;
  }

  get newOwner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateOwnerCall__Outputs {
  _call: UpdateOwnerCall;

  constructor(call: UpdateOwnerCall) {
    this._call = call;
  }
}

export class UpdateWhitelistCall extends ethereum.Call {
  get inputs(): UpdateWhitelistCall__Inputs {
    return new UpdateWhitelistCall__Inputs(this);
  }

  get outputs(): UpdateWhitelistCall__Outputs {
    return new UpdateWhitelistCall__Outputs(this);
  }
}

export class UpdateWhitelistCall__Inputs {
  _call: UpdateWhitelistCall;

  constructor(call: UpdateWhitelistCall) {
    this._call = call;
  }

  get account_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get whitelist_(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class UpdateWhitelistCall__Outputs {
  _call: UpdateWhitelistCall;

  constructor(call: UpdateWhitelistCall) {
    this._call = call;
  }
}
